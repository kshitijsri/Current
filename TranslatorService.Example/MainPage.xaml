<common:LayoutAwarePage
    x:Name="pageRoot"
    x:Class="TranslatorService.Example.MainPage"
    DataContext="{Binding DefaultViewModel, RelativeSource={RelativeSource Self}}"
    IsTabStop="false"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TranslatorService.Example"
    xmlns:common="using:TranslatorService.Example.Common"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Page.Resources>

        <!-- TODO: Delete this line if the key AppName is declared in App.xaml -->
        <x:String x:Key="AppName">Digi[Tal]ker</x:String>
        <local:StringToColorConverter x:Key="ColorConverter"/>
    </Page.Resources>

    <!--
        This grid acts as a root panel for the page that defines two rows:
        * Row 0 contains the back button and page title
        * Row 1 contains the rest of the page layout
    -->
    <Grid Style="{StaticResource LayoutRootStyle}">
        <Grid.RowDefinitions>
            <RowDefinition Height="140"/>
            <RowDefinition Height="15"/>
            <RowDefinition Height="400"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Back button and page title -->
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="backButton" Click="GoBack" IsEnabled="{Binding Frame.CanGoBack, ElementName=pageRoot}" Style="{StaticResource BackButtonStyle}"/>
            <TextBlock x:Name="pageTitle" Grid.Column="1" Text="{StaticResource AppName}" Style="{StaticResource PageHeaderTextStyle}"/>
            <MediaElement x:Name="SpeechMediaElement"></MediaElement>
        </Grid>

        <local:MyGridView x:Name="DynamicGrid" Margin="0,0,0,3" Grid.Row="2" IsItemClickEnabled="True" ItemClick="ItemView_ItemClick" ItemsSource="{Binding}">
            <GridView.ItemsPanel>
                <ItemsPanelTemplate>
                    <VariableSizedWrapGrid ItemHeight="100" ItemWidth="150" />
                </ItemsPanelTemplate>
            </GridView.ItemsPanel>
            <GridView.ItemTemplate>
                <DataTemplate>
                    <Grid Height="300" Width="300">
                        <Grid.Background>
                            <SolidColorBrush Color="{Binding Path=ColorHex, Converter={StaticResource ColorConverter}}" />
                        </Grid.Background>
                        <StackPanel VerticalAlignment="Top">
                            <StackPanel.Background>
                                <SolidColorBrush Color="Black" Opacity=".75" />
                            </StackPanel.Background>
                            <TextBlock FontSize="15" Margin="10">
                                <Run Text="{Binding Order}" />. <Run Text="{Binding Text}"/>
                            </TextBlock>
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </GridView.ItemTemplate>
        </local:MyGridView>

        <Grid Grid.Row="2" Margin="0,0,0,5">
            <ProgressBar IsIndeterminate="True" HorizontalAlignment="Stretch" x:Name="WaitProgressBar" VerticalAlignment="Top" Visibility="Collapsed" Margin="0,408,0,-214"/>
            <Border Padding="116,0,40,46" Margin="0,408,686,-220">
                <StackPanel Orientation="Vertical" Margin="-36,28,36,-46" Height="175" VerticalAlignment="Top" >
                    <TextBlock Text="Text to speech:" Style="{StaticResource ItemTextStyle}" Margin="5"></TextBlock>
                    <TextBox x:Name="SpeechText" Margin="5" Height="76" TextWrapping="Wrap" ScrollViewer.VerticalScrollBarVisibility="Auto" RenderTransformOrigin="0.5,0.5"/>
                    <StackPanel Margin="0,0,0,0" Orientation="Horizontal" HorizontalAlignment="Center">
                        <Button Content="Speak" x:Name="SpeakButton" Click="SpeakButton_Click" Margin="10" Width="153"/>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="5,20"/>
                </StackPanel>
            </Border>
        </Grid>
        <Button Content="Add" x:Name="AddButton" Click="AddButton_Click" HorizontalAlignment="Left" Margin="1259,118,0,0" Grid.Row="3" VerticalAlignment="Top" Height="85" Width="97"/>

        <VisualStateManager.VisualStateGroups>

            <!-- Visual states reflect the application's view state -->
            <VisualStateGroup x:Name="ApplicationViewStates">
                <VisualState x:Name="FullScreenLandscape"/>
                <VisualState x:Name="Filled"/>

                <!-- The entire page respects the narrower 100-pixel margin convention for portrait -->
                <VisualState x:Name="FullScreenPortrait">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PortraitBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>

                <!-- The back button and title have different styles when snapped -->
                <VisualState x:Name="Snapped">
                    <Storyboard>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="backButton" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedBackButtonStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="pageTitle" Storyboard.TargetProperty="Style">
                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SnappedPageHeaderTextStyle}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</common:LayoutAwarePage>
